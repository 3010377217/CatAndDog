{"version":3,"file":"Index.js","sources":["pages/Index/Index.vue","../HBuilderX/HBuilderX/plugins/uniapp-cli-vite/uniPage:/cGFnZXMvSW5kZXgvSW5kZXgudnVl"],"sourcesContent":["<template>\n\t<view class=\"container\">\n\t\t<!-- 卡片式轮播图 -->\n\t\t<view class=\"banner-container\">\n\t\t\t<u-swiper\n\t\t\t\t:list=\"bannerList\"\n\t\t\t\theight=\"200\"\n\t\t\t\tmode=\"card\"\n\t\t\t\tcircular\n\t\t\t\t:autoplay=\"true\"\n\t\t\t\tprevious-margin=\"50\"\n\t\t\t\tnext-margin=\"50\"\n\t\t\t\tduration=\"800\"\n\t\t\t\tinterval=\"3000\"\n\t\t\t\tscale=\"0.8\"\n\t\t\t\t\t/>\n\t\t</view>\n\t\t<!--瀑布流商品卡片 -->\n\t\t<view class=\"waterfall-container\">\n\t\t\t<view v-if=\"!pageInfo.initialized\" class=\"waterfall-loading\">\n\t\t\t\t<view class=\"loading-text\">商品数据加载中...</view>\n\t\t\t</view>\n\t\t\t<view v-else class=\"waterfall-columns\">\n\t\t\t\t<!-- 左列 -->\n\t\t\t\t<view class=\"waterfall-column\">\n\t\t\t\t\t<view v-for=\"(item, index) in leftColumn\" :key=\"index\" class=\"goods-item\">\n\t\t\t\t\t\t<view \n\t\t\t\t\t\t\tclass=\"goods-card\" \n\t\t\t\t\t\t\t:class=\"{ 'card-active': activeCardId === item.id }\"\n\t\t\t\t\t\t\t@touchstart=\"handleCardTouchStart(item.id)\" \n\t\t\t\t\t\t\t@touchend=\"handleCardTouchEnd(item.id)\"\n\t\t\t\t\t\t\t@touchcancel=\"handleCardTouchEnd(item.id)\"\n\t\t\t\t\t\t\t@tap=\"showGoodsDetail(item)\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<image :src=\"item.image\" mode=\"widthFix\" class=\"goods-image\" @load=\"(e)=>onImageLoad(e,'left')\"></image>\n\t\t\t\t\t\t\t<view class=\"goods-info\">\n\t\t\t\t\t\t\t\t<text class=\"goods-title\">{{item.title}}</text>\n\t\t\t\t\t\t\t\t<text class=\"goods-desc\">{{item.description}}</text>\n\t\t\t\t\t\t\t\t<view class=\"goods-price-box\">\n\t\t\t\t\t\t\t\t\t<text class=\"goods-price\">¥{{item.price}}</text>\n\t\t\t\t\t\t\t\t\t<text class=\"goods-sales\">已售{{item.sales}}件</text>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t\t\n\t\t\t\t<!-- 右列 -->\n\t\t\t\t<view class=\"waterfall-column\">\n\t\t\t\t\t<view v-for=\"(item, index) in rightColumn\" :key=\"index\" class=\"goods-item\">\n\t\t\t\t\t\t<view \n\t\t\t\t\t\t\tclass=\"goods-card\" \n\t\t\t\t\t\t\t:class=\"{ 'card-active': activeCardId === item.id }\"\n\t\t\t\t\t\t\t@touchstart=\"handleCardTouchStart(item.id)\" \n\t\t\t\t\t\t\t@touchend=\"handleCardTouchEnd(item.id)\"\n\t\t\t\t\t\t\t@touchcancel=\"handleCardTouchEnd(item.id)\"\n\t\t\t\t\t\t\t@tap=\"showGoodsDetail(item)\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<image :src=\"item.image\" mode=\"widthFix\" class=\"goods-image\" @load=\"(e)=>onImageLoad(e,'right')\"></image>\n\t\t\t\t\t\t\t<view class=\"goods-info\">\n\t\t\t\t\t\t\t\t<text class=\"goods-title\">{{item.title}}</text>\n\t\t\t\t\t\t\t\t<text class=\"goods-desc\">{{item.description}}</text>\n\t\t\t\t\t\t\t\t<view class=\"goods-price-box\">\n\t\t\t\t\t\t\t\t\t<text class=\"goods-price\">¥{{item.price}}</text>\n\t\t\t\t\t\t\t\t\t<text class=\"goods-sales\">已售{{item.sales}}件</text>\n\t\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t\t</view>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<!-- 加载状态提示 -->\n\t\t<view class=\"loading-status\" v-if=\"pageInfo.initialized\">\n\t\t\t<view v-if=\"pageInfo.loading\" class=\"loading\">\n\t\t\t\t<text>加载中...</text>\n\t\t\t</view>\n\t\t\t<view v-else-if=\"!pageInfo.hasMore\" class=\"no-more\">\n\t\t\t\t<text>没有更多数据了</text>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<!-- 商品详情弹出层 -->\n\t\t<goods-detail-popup \n\t\t\tv-model:show=\"showPopup\" \n\t\t\t:item=\"selectedGoods\"\n\t\t\t@add-to-cart=\"handleAddToCart\"\n\t\t/>\n\t</view>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted, reactive } from 'vue'\nimport { onPullDownRefresh, onPageScroll as uniPageScroll, onReady } from '@dcloudio/uni-app'\nimport { useShopStore } from '@/stores/shop.js'\nimport GoodsDetailPopup from '@/components/GoodsDetailPopup.vue'\n\n// 获取shop store\nconst shopStore = useShopStore()\n\n// 商品详情弹出层相关\nconst showPopup = ref(false)\nconst selectedGoods = ref(null)\n\n// 当前活动卡片ID (用于触摸交互)\nconst activeCardId = ref(null)\n\n// 卡片触摸事件处理\nconst handleCardTouchStart = (id) => {\n  activeCardId.value = id\n}\n\nconst handleCardTouchEnd = () => {\n  // 延迟一点点再移除活动状态，使动画效果更好\n  setTimeout(() => {\n    activeCardId.value = null\n  }, 50)\n}\n\n// 显示商品详情\nconst showGoodsDetail = (item) => {\n\t// 转换格式为弹窗所需的格式\n\tselectedGoods.value = {\n\t\tid: item.id,\n\t\tname: item.title,\n\t\tdescription: item.description,\n\t\tprice: item.price,\n\t\timage: item.image\n\t}\n\tshowPopup.value = true\n}\n\n// 处理添加到购物车\nconst handleAddToCart = (data) => {\n\tconst { item, quantity } = data\n\t// 这里可以添加购物车逻辑\n\tshopStore.updateGoodsNum(item.id, quantity)\n\t\n\tuni.showToast({\n\t\ttitle: `已添加${quantity}件到购物车`,\n\t\ticon: 'success'\n\t})\n}\n\n// 给 throttle 默认 600ms，避免并发\nconst throttle = (fn, delay = 600) => {\n    let lastTime = 0\n    return function(...args) {\n        const now = Date.now()\n        if (now - lastTime >= delay) {\n            fn.apply(this, args)\n            lastTime = now\n        }\n    }\n}\n\n// 页面滚动节流监听 – 与 loadMoreGoods 耗时保持一致\nconst throttledPageScroll = throttle((e) => {\n    if (!pageInfo.loading && pageInfo.hasMore) {\n        checkScrollPosition(e.scrollTop)\n    }\n})\n\n// 注册页面滚动监听\nuniPageScroll(throttledPageScroll)\n\n// 轮播图数据\nconst bannerList = ref([\n\t '/static/picture/food1.jpg',\n\t '/static/picture/food2.jpg',\n\t '/static/picture/food3.jpg',\n\t '/static/picture/4.jpg'\n])\n\n// 当前显示的索引\nconst currentIndex = ref(0)\n// 前一个索引（用于淡出效果）\nconst prevIndex = ref(-1)\n// 自动播放定时器\nlet autoplayTimer = null\n\n// 触摸相关状态\nconst touchStartX = ref(0)\nconst touchStartY = ref(0)\nconst isTouching = ref(false)\nconst touchDeltaX = ref(0)\nconst isTransitioning = ref(false)\n\n\n// 切换到指定幻灯片\nconst goToSlide = (index) => {\n\tif (index === currentIndex.value || isTransitioning.value) return\n\t\n\tisTransitioning.value = true\n\tprevIndex.value = currentIndex.value\n\tcurrentIndex.value = index\n\t\n\t// 800ms后重置过渡状态和前一个索引，与CSS过渡时间匹配\n\tsetTimeout(() => {\n\t\tprevIndex.value = -1\n\t\tisTransitioning.value = false\n\t}, 800)\n}\n\n// 切换到下一张幻灯片\nconst nextSlide = () => {\n\tgoToSlide((currentIndex.value + 1) % bannerList.value.length)\n}\n\n// 切换到上一张幻灯片\nconst prevSlide = () => {\n\tgoToSlide((currentIndex.value - 1 + bannerList.value.length) % bannerList.value.length)\n}\n\n// 启动自动播放\nconst startAutoplay = () => {\n\tstopAutoplay()\n\tautoplayTimer = setInterval(() => {\n\t\tnextSlide()\n\t}, 4000) // 4秒切换一次\n}\n\n// 停止自动播放\nconst stopAutoplay = () => {\n\tif (autoplayTimer) {\n\t\tclearInterval(autoplayTimer)\n\t\tautoplayTimer = null\n\t}\n}\n\n// 触摸事件处理\nconst handleTouchStart = (e) => {\n\tif (isTransitioning.value) return\n\t\n\ttouchStartX.value = e.touches[0].clientX\n\ttouchStartY.value = e.touches[0].clientY\n\tisTouching.value = true\n\ttouchDeltaX.value = 0\n\tstopAutoplay() // 触摸时停止自动播放\n}\n\nconst handleTouchMove = (e) => {\n\tif (!isTouching.value) return\n\t\n\tconst deltaX = e.touches[0].clientX - touchStartX.value\n\tconst deltaY = e.touches[0].clientY - touchStartY.value\n\t\n\t// 如果垂直滑动距离大于水平滑动距离，则不处理轮播图滑动\n\tif (Math.abs(deltaY) > Math.abs(deltaX)) {\n\t\tisTouching.value = false\n\t\treturn\n\t}\n\t\n\ttouchDeltaX.value = deltaX\n\t// 阻止页面滚动\n\te.preventDefault && e.preventDefault()\n}\n\nconst handleTouchEnd = () => {\n\tif (!isTouching.value) return\n\t\n\tisTouching.value = false\n\tconst threshold = 20 // 滑动阈值\n\t\n\tif (Math.abs(touchDeltaX.value) > threshold) {\n\t\tif (touchDeltaX.value > 0) {\n\t\t\t// 向右滑动，显示上一张\n\t\t\tprevSlide()\n\t\t} else {\n\t\t\t// 向左滑动，显示下一张\n\t\t\tnextSlide()\n\t\t}\n\t}\n\t\n\ttouchDeltaX.value = 0\n\tstartAutoplay() // 触摸结束后重新开始自动播放\n}\n\n// 组件挂载时启动自动播放\nonMounted(() => {\n\tstartAutoplay()\n})\n\n// 组件卸载时清除定时器\nonUnmounted(() => {\n\tstopAutoplay()\n})\n\n// 瀑布流数据\nconst goodsList = ref([])\n\n// 分页参数\nconst pageInfo = reactive({\n\tpage: 1,\n\tpageSize: 10,\n\thasMore: true,\n\tloading: false,\n\tinitialized: false // 是否已完成初始化\n})\n\n// 左右列数据\nconst leftColumn = ref([])\nconst rightColumn = ref([])\n\n// 左右列高度\nconst leftHeight = ref(0)\nconst rightHeight = ref(0)\n\n// 初始化瀑布流数据\nconst initWaterfall = () => {\n\tleftColumn.value = []\n\trightColumn.value = []\n\tleftHeight.value = 0\n\trightHeight.value = 0\n}\n\n// 使用图片 onLoad 返回尺寸，减少系统 API 调用\nconst onImageLoad = (e, column) => {\n\tconst { width, height } = e.detail || {}\n\tif (!width || !height) return\n\n\tconst columnWidth = uni.getSystemInfoSync().windowWidth * 0.9 / 2 // 两列，容器 90%\n\tconst scaledHeight = (height / width) * columnWidth + 200 // 加上文字等内容预估\n\n\tif (column === 'left') {\n\t\tleftHeight.value += scaledHeight\n\t} else {\n\t\trightHeight.value += scaledHeight\n\t}\n\n\t// 图片实际渲染完后再更新容器高度，保证滚动检测准确\n\tuni.createSelectorQuery().select('.container').boundingClientRect(res => {\n\t\tif (res) containerHeight = res.height\n\t}).exec()\n}\n\n// 防抖函数\nlet lastLoadTime = 0\nlet containerHeight = 0\n\n// 初始化时获取容器高度\nonMounted(() => {\n\tconst query = uni.createSelectorQuery()\n\tquery.select('.container').boundingClientRect(data => {\n\t\tif (data) containerHeight = data.height\n\t}).exec()\n})\n\nconst throttleLoadMore = () => {\n\tconst now = Date.now()\n\tif (now - lastLoadTime > 600) { // 与 throttle 保持一致\n\t\tlastLoadTime = now\n\t\tconsole.log('触发了上拉加载更多')\n\t\tloadMoreGoods()\n\t}\n}\n\n// 列高均衡变量\nlet lastInsertLeft = false // 记录上一次是否插入左列\n\n// 根据每次插入后实时更新的列高差，把新商品合理分配到两列\nconst updateWaterfall = (newItems) => {\n\t// 获取卡片估算高度：默认估计每个卡片约 500px\n\tconst getEstimatedHeight = () => 500\n\t\n\t// 强制前两个商品交替放置，确保两列都有数据\n\tif (newItems.length > 0) {\n\t\tleftColumn.value.push(newItems[0])\n\t\tlastInsertLeft = true\n\t\t// 模拟更新高度\n\t\tleftHeight.value += getEstimatedHeight()\n\t}\n\t\n\tif (newItems.length > 1) {\n\t\trightColumn.value.push(newItems[1])\n\t\tlastInsertLeft = false\n\t\t// 模拟更新高度\n\t\trightHeight.value += getEstimatedHeight()\n\t}\n\t\n\t// 处理剩余商品，每次实时计算高度差\n\tnewItems.forEach((item, index) => {\n\t\t// 跳过已处理的前两个商品\n\t\tif (index < 2) {\n\t\t\treturn\n\t\t}\n\t\t\n\t\t// 每次放置前重新计算当前列高差\n\t\tconst diff = leftHeight.value - rightHeight.value\n\t\t\n\t\t// 始终放入较矮的列，保持列高平衡\n\t\tif (diff > 0) {\n\t\t\t// 左列更高，放入右列\n\t\t\trightColumn.value.push(item)\n\t\t\trightHeight.value += getEstimatedHeight() // 立即更新高度\n\t\t\tlastInsertLeft = false\n\t\t} else {\n\t\t\t// 右列更高或相等，放入左列\n\t\t\tleftColumn.value.push(item)\n\t\t\tleftHeight.value += getEstimatedHeight() // 立即更新高度\n\t\t\tlastInsertLeft = true\n\t\t}\n\t})\n}\n\n// 主动检查滚动位置\nlet isTriggered = false\nconst checkScrollPosition = (scrollTop) => {\n\tif (!containerHeight) return\n\n\tconst windowHeight = uni.getSystemInfoSync().windowHeight\n\tconst distanceToBottom = containerHeight - (scrollTop + windowHeight)\n\tconst triggerPx = rpxToPx(TRIGGER_HEIGHT_RPX)\n\n\tif (distanceToBottom <= triggerPx && !isTriggered) {\n\t\tisTriggered = true\n\t\tthrottleLoadMore()\n\t} else if (distanceToBottom > triggerPx * 2) {\n\t\tisTriggered = false\n\t}\n}\n\n// 下拉刷新\nonPullDownRefresh(() => {\n\tconsole.log('触发了下拉刷新')\n\t// 重置数据\n\tgoodsList.value = []\n\tleftColumn.value = []\n\trightColumn.value = []\n\tleftHeight.value = 0\n\trightHeight.value = 0\n\tpageInfo.page = 1\n\tpageInfo.hasMore = true\n\tpageInfo.initialized = false\n\t\n\t// 重新加载数据\n\tinitGoodsData()\n\t\n\t// 完成刷新\n\tsetTimeout(() => {\n\t\tuni.stopPullDownRefresh()\n\t}, 1000)\n})\n\n// 页面加载和准备就绪时初始化\nonMounted(() => {\n\tstartAutoplay()\n\t// 初始化瀑布流结构，但不加载数据（避免重复加载）\n\tinitWaterfall()\n})\n\n// 当页面准备就绪时加载商品数据\nonReady(() => {\n\t// 首次加载商品数据\n\tinitGoodsData()\n})\n\nconst TRIGGER_HEIGHT_RPX = 400 // 距离底部 400rpx 触发\nconst rpxToPx = (rpx) => rpx * uni.getSystemInfoSync().windowWidth / 750\n\n// 从API获取的商品数据转换为瀑布流所需格式\nconst transformShopGoods = (goodsItems) => {\n\treturn goodsItems.map(item => ({\n\t\tid: item.id,\n\t\ttitle: item.name,\n\t\tprice: item.price.toFixed(2),\n\t\tsales: item.sales || Math.floor(Math.random() * 500) + 50,\n\t\timage: item.image,\n\t\tdescription: item.description\n\t}))\n}\n\n// 初始化商品数据\nconst initGoodsData = () => {\n\tif (pageInfo.loading) return\n\t\n\t// 显示加载中状态\n\tpageInfo.loading = true\n\t\n\t// 使用shopStore的fetchGoods方法获取数据\n\tshopStore.fetchGoods(1, pageInfo.pageSize).then(result => {\n\t\t// 转换数据格式\n\t\tconst transformedGoods = transformShopGoods(result.data)\n\t\t\n\t\t// 更新商品列表\n\t\tgoodsList.value = transformedGoods\n\t\t\n\t\t// 更新瀑布流\n\t\tupdateWaterfall(transformedGoods)\n\t\t\n\t\t// 更新分页状态\n\t\tpageInfo.page = 2\n\t\tpageInfo.hasMore = result.pagination.hasMore\n\t\tpageInfo.loading = false\n\t\tpageInfo.initialized = true\n\t\t\n\t\tconsole.log('商品数据初始化完成')\n\t}).catch(error => {\n\t\tconsole.error('获取商品数据失败:', error)\n\t\tpageInfo.loading = false\n\t\t\n\t\t// 显示错误提示\n\t\tuni.showToast({\n\t\t\ttitle: '加载数据失败，请稍后再试',\n\t\t\ticon: 'none'\n\t\t})\n\t})\n}\n\n// 加载更多商品\nconst loadMoreGoods = () => {\n\t// 如果正在加载或没有更多数据，则不执行\n\tif (pageInfo.loading || !pageInfo.hasMore || !pageInfo.initialized) return\n\t\n\t// 设置加载中状态\n\tpageInfo.loading = true\n\t\n\t// 使用shopStore的fetchGoods方法获取下一页数据\n\tshopStore.fetchGoods(pageInfo.page, pageInfo.pageSize).then(result => {\n\t\t// 转换数据格式\n\t\tconst transformedGoods = transformShopGoods(result.data)\n\t\t\n\t\t// 添加到商品列表\n\t\tgoodsList.value = [...goodsList.value, ...transformedGoods]\n\t\t\n\t\t// 更新瀑布流\n\t\tupdateWaterfall(transformedGoods)\n\t\t\n\t\t// 更新分页状态\n\t\tpageInfo.page++\n\t\tpageInfo.hasMore = result.pagination.hasMore\n\t\tpageInfo.loading = false\n\t\t\n\t\t// 更新容器高度，保证触底计算准确\n\t\tuni.createSelectorQuery().select('.container').boundingClientRect(res => {\n\t\t\tif (res) containerHeight = res.height\n\t\t}).exec()\n\t\t\n\t\tisTriggered = false\n\t}).catch(error => {\n\t\tconsole.error('加载更多商品失败:', error)\n\t\tpageInfo.loading = false\n\t\tisTriggered = false\n\t\t\n\t\t// 显示错误提示\n\t\tuni.showToast({\n\t\t\ttitle: '加载数据失败，请稍后再试',\n\t\t\ticon: 'none'\n\t\t})\n\t})\n}\n\n// 商品详情页导航（弃用，改为弹窗显示）\nconst navigateToDetail = (id) => {\n\tuni.navigateTo({\n\t\turl: `/pages/Goods/Detail?id=${id}`\n\t})\n}\n</script>\n\n<style lang=\"scss\">\n.container {\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding-top: 20rpx;\n\tbox-sizing: border-box;\n\t\n}\n\n.waterfall-loading {\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 300rpx;\n\twidth: 100%;\n\t\n\t.loading-text {\n\t\tfont-size: 28rpx;\n\t\tcolor: #999;\n\t}\n}\n\n.fade-swiper-box {\n\tmargin: 0 auto;\n\twidth: 95%;\n\theight: 400rpx; /* 减小轮播图高度 */\n\tposition: relative;\n\toverflow: hidden;\n\tborder-radius: 12rpx;\n\tbox-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.1);\n}\n\n.custom-fade-swiper {\n\twidth: 100%;\n\theight: 100%;\n\tposition: relative;\n}\n\n.swiper-item {\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\topacity: 0;\n\ttransition: opacity 0.8s ease;\n\twill-change: opacity;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\t\n\t&.active {\n\t\topacity: 1;\n\t\tz-index: 2;\n\t\tanimation: fadeIn 1.3s ease forwards;\n\t}\n\t\n\t&.prev {\n\t\topacity: 0;\n\t\tz-index: 1;\n\t\tanimation: fadeOut 1.3s ease forwards;\n\t}\n\t\n\t&.no-transition {\n\t\ttransition: none;\n\t\tanimation: none;\n\t}\n}\n\n.swiper-image {\n\twidth: 100%;\n\theight: 100%;\n\tobject-fit: contain;\n\tdisplay: block;\n\tbackground-color: #f5f5f5; /* 添加背景色，防止图片较小时容器空白 */\n}\n\n.indicator {\n\tposition: absolute;\n\tbottom: 20rpx;\n\tleft: 50%;\n\ttransform: translateX(-50%);\n\tdisplay: flex;\n\tgap: 16rpx;\n\tz-index: 3;\n\tpadding: 8rpx 16rpx;\n\tborder-radius: 30rpx;\n\tbackground-color: rgba(0, 0, 0, 0.2);\n}\n\n.dot {\n\twidth: 12rpx;\n\theight: 12rpx;\n\tborder-radius: 50%;\n\tbackground-color: rgba(255, 255, 255, 0.5);\n\ttransition: all 0.3s ease;\n\tcursor: pointer;\n\t\n\t&.active {\n\t\tbackground-color: #ffffff;\n\t\ttransform: scale(1.3);\n\t}\n}\n\n/* 淡入淡出动画 */\n@keyframes fadeIn {\n\tfrom { opacity: 0; }\n\tto { opacity: 1; }\n}\n\n@keyframes fadeOut {\n\tfrom { opacity: 1; }\n\tto { opacity: 0; }\n}\n\n/* 瀑布流样式 */\n.waterfall-container {\n\tpadding: 0rpx 2%;\n\tpadding-top: 20rpx;\n\tbox-sizing: border-box;\n\twidth: 100%;\n}\n\n.waterfall-columns {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\twidth: 100%;\n}\n\n.waterfall-column {\n\twidth: 48%; /* 两列，留间隙 */\n}\n\n.goods-item {\n\tmargin-bottom: 30rpx; /* 增加卡片之间的间距 */\n\tborder-radius: 16rpx;\n\toverflow: hidden;\n\tpadding: 2rpx; /* 添加小间距，突出边框 */\n}\n\n.goods-card {\n\tbackground-color: #ffffff;\n\tborder-radius: 16rpx;\n\tbox-shadow: 0 10rpx 25rpx rgba(0, 0, 0, 0.12), 0 4rpx 10rpx rgba(0, 0, 0, 0.06);\n\toverflow: hidden;\n\ttransition: all 0.2s cubic-bezier(0.25, 0.8, 0.25, 1);\n\ttransform: translateZ(0) scale(1);\n\tborder: 3rpx solid rgba(215, 215, 215, 0.95); /* 边框更粗且更明显 */\n\tposition: relative;\n\twill-change: transform, box-shadow;\n\t\n\t/* 顶部边缘高光效果 */\n\t&::before {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\theight: 2rpx;\n\t\tbackground: linear-gradient(to right, rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.5));\n\t\tz-index: 1;\n\t}\n\t\n\t/* 左右边缘阴影效果 */\n\t&::after {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\theight: 4rpx;\n\t\tbackground: linear-gradient(to right, rgba(0, 0, 0, 0.03), rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.03));\n\t\tz-index: 1;\n\t}\n\t\n\t/* 按下状态样式 */\n\t&.card-active {\n\t\ttransform: translateZ(0) scale(0.95);\n\t\tbox-shadow: 0 4rpx 10rpx rgba(0, 0, 0, 0.08), 0 2rpx 5rpx rgba(0, 0, 0, 0.04);\n\t}\n}\n\n.goods-image {\n\twidth: 100%;\n\theight: auto;\n\tdisplay: block;\n\ttransition: transform 0.3s ease;\n\t\n\t&:active {\n\t\ttransform: scale(0.98);\n\t}\n}\n\n.goods-info {\n\tpadding: 24rpx 20rpx; /* 增加内部间距 */\n\tposition: relative;\n\t\n\t&::after {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 10%;\n\t\tright: 10%;\n\t\theight: 1rpx;\n\t\tbackground: linear-gradient(to right, transparent, rgba(200, 200, 200, 0.5), transparent);\n\t}\n}\n\n.goods-title {\n\tfont-size: 28rpx;\n\tcolor: #333333;\n\tline-height: 1.5;\n\tfont-weight: 600; /* 加粗标题 */\n\tdisplay: -webkit-box;\n\t-webkit-box-orient: vertical;\n\t-webkit-line-clamp: 2;\n\toverflow: hidden;\n\tmargin-bottom: 10rpx; /* 增加下方间距 */\n}\n\n.goods-desc {\n\tfont-size: 24rpx;\n\tcolor: #999999;\n\tline-height: 1.3;\n\tdisplay: -webkit-box;\n\t-webkit-box-orient: vertical;\n\t-webkit-line-clamp: 2;\n\toverflow: hidden;\n\tmargin-bottom: 8rpx;\n}\n\n.goods-price-box {\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tmargin-top: 16rpx; /* 增加上方间距 */\n}\n\n.goods-price {\n\tfont-size: 36rpx; /* 增大价格字体 */\n\tcolor: #ff4400; /* 更鲜艳的价格颜色 */\n\tfont-weight: bold;\n\ttext-shadow: 0 2rpx 3rpx rgba(255, 68, 0, 0.15); /* 增强价格文字阴影 */\n}\n\n.goods-sales {\n\tfont-size: 24rpx;\n\tcolor: #999999;\n\tbackground-color: rgba(245, 245, 245, 0.9);\n\tpadding: 6rpx 12rpx; /* 增加内部填充 */\n\tborder-radius: 20rpx;\n\tbox-shadow: inset 0 1rpx 2rpx rgba(0, 0, 0, 0.05); /* 内阴影增加立体感 */\n}\n\n/* 加载状态样式 */\n.loading-status {\n\twidth: 100%;\n\theight: 80rpx;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tmargin: 20rpx 0;\n}\n\n.loading, .no-more {\n\tfont-size: 26rpx;\n\tcolor: #999;\n\ttext-align: center;\n}\n\n.loading {\n\tdisplay: flex;\n\talign-items: center;\n}\n\n.no-more {\n\tpadding: 10rpx 0;\n}\n</style>","import MiniProgramPage from 'D:/CatAndDog/pages/Index/Index.vue'\nwx.createPage(MiniProgramPage)"],"names":["useShopStore","ref","uni","uniPageScroll","onMounted","onUnmounted","reactive","onPullDownRefresh","onReady","MiniProgramPage"],"mappings":"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"}